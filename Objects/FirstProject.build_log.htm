<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.37.0.0
Copyright (C) 2022 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Ahmed Elkamel, None, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.37.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.18
Assembler:       Armasm.exe V6.18
Linker/Locator:  ArmLink.exe V6.18
Library Manager: ArmAr.exe V6.18
Hex Converter:   FromElf.exe V6.18
CPU DLL:         SARMCM3.DLL V5.37.0.0
Dialog DLL:      DCM.DLL V1.17.5.0
Target DLL:      UL2CM3.DLL V1.164.7.0
Dialog DLL:      TCM.DLL V1.56.1.0
 
<h2>Project:</h2>
D:\Work\Project\Emedded_Dev\Blinking_LED_Control_uVisionProject\FirstProject.uvprojx
Project File Date:  08/27/2022

<h2>Output:</h2>
*** Using Compiler 'V6.18', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Target 1'
compiling IntCtrl_Lcfg.c...
COTS/MCAL/IntCtrl/Src/IntCtrl.c(70): warning: implicit conversion loses integer precision: 'int' to 'IntCtrl_PriType' (aka 'unsigned char') [-Wimplicit-int-conversion]
                priVal = (groupPriLevel<<subGroupPriBits)|subGroupPriLevel;
                       ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(88): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                SYSPRI_MEM = (priVal<<SCB_PRI_BIT0);
                           ~  ~~~~~~^~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(91): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                SYSPRI_BUS = (priVal<<SCB_PRI_BIT0);
                           ~  ~~~~~~^~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(94): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                SYSPRI_USAGE = (priVal<<SCB_PRI_BIT0);
                             ~  ~~~~~~^~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(97): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                SYSPRI_SVC = (priVal<<SCB_PRI_BIT0);
                           ~  ~~~~~~^~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(100): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                SYSPRI_DEBUG = (priVal<<SCB_PRI_BIT0);
                             ~  ~~~~~~^~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(103): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                SYSPRI_PENDSV = (priVal<<SCB_PRI_BIT0);
                              ~  ~~~~~~^~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(106): warning: implicit conversion loses integer precision: 'int' to 'uint8' (aka 'unsigned char') [-Wimplicit-int-conversion]
                SYSPRI_TICK = (priVal<<SCB_PRI_BIT0);
                            ~  ~~~~~~^~~~~~~~~~~~~~
COTS/MCAL/IntCtrl/Src/IntCtrl.c(85): warning: 81 enumeration values not explicitly handled in switch: 'INTCTRL_RESET', 'INTCTRL_NMI', 'INTCTRL_HARDFAULT'... [-Wswitch-enum]
        switch(IntVectNum)
               ^~~~~~~~~~
9 warnings generated.
compiling IntCtrl.c...
COTS/MCAL/Port/Src/Port.c(131): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODIR_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(135): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT_PER_BB(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODATA_OFFSET+BITMASK_ALL_BITS_OFFSET), pinIdx);
                ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(40): note: expanded from macro 'SET_BIT_PER_BB'
#define SET_BIT_PER_BB(REG,BIT) ((*((volatile uint32*)( 0x42000000 + (((uint32)(&REG) - 0x40000000) * 32) + ((BIT) * 4) ))) = STD_HIGH)
                                                                                 ^~~
COTS/MCAL/Port/Src/Port.c(139): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                CLEAR_BIT_PER_BB(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODATA_OFFSET+BITMASK_ALL_BITS_OFFSET), pinIdx);
                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(46): note: expanded from macro 'CLEAR_BIT_PER_BB'
#define CLEAR_BIT_PER_BB(REG,BIT) ((*((volatile uint32*)( 0x42000000 + (((uint32)(&REG) - 0x40000000) * 32) + ((BIT) * 4) ))) = STD_LOW)
                                                                                   ^~~
COTS/MCAL/Port/Src/Port.c(146): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            CLEAR_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODIR_OFFSET), pinIdx);
            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(28): note: expanded from macro 'CLEAR_BIT'
#define CLEAR_BIT(REG,BIT) (REG&=(~(1<<BIT)))
                            ^~~
COTS/MCAL/Port/Src/Port.c(161): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODR2R_OFFSET), pinIdx);
                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(165): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODR4R_OFFSET), pinIdx);
                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(169): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODR8R_OFFSET), pinIdx);
                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(172): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODR2R_OFFSET), pinIdx);
                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(171): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
            default: 
            ^
COTS/MCAL/Port/Src/Port.c(183): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPUR_OFFSET), pinIdx);
                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(187): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPDR_OFFSET), pinIdx);
                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(191): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOODR_OFFSET), pinIdx);
                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(195): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                CLEAR_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPUR_OFFSET), pinIdx);
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(28): note: expanded from macro 'CLEAR_BIT'
#define CLEAR_BIT(REG,BIT) (REG&=(~(1<<BIT)))
                            ^~~
COTS/MCAL/Port/Src/Port.c(196): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                CLEAR_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPDR_OFFSET), pinIdx);
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(28): note: expanded from macro 'CLEAR_BIT'
#define CLEAR_BIT(REG,BIT) (REG&=(~(1<<BIT)))
                            ^~~
COTS/MCAL/Port/Src/Port.c(197): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                CLEAR_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOODR_OFFSET), pinIdx);
                ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(28): note: expanded from macro 'CLEAR_BIT'
#define CLEAR_BIT(REG,BIT) (REG&=(~(1<<BIT)))
                            ^~~
COTS/MCAL/Port/Src/Port.c(199): warning: default label in switch which covers all enumeration values [-Wcovered-switch-default]
            default: 
            ^
COTS/MCAL/Port/Src/Port.c(210): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOAFSEL_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(215): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            *(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPCTL_OFFSET) |= PortConfigPtr[i].Port_PinMode << GPIOPCTL_PMC_BITS*pinIdx;
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/Port/Src/Port.c(215): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            *(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPCTL_OFFSET) |= PortConfigPtr[i].Port_PinMode << GPIOPCTL_PMC_BITS*pinIdx;
                                                                                      ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/Port/Src/Port.c(220): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOAMSEL_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(230): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOAFSEL_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(235): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            *(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPCTL_OFFSET) |= PortConfigPtr[i].Port_PinMode << GPIOPCTL_PMC_BITS*pinIdx;
             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/Port/Src/Port.c(235): warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            *(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOPCTL_OFFSET) |= PortConfigPtr[i].Port_PinMode << GPIOPCTL_PMC_BITS*pinIdx;
                                                                                      ~~ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/Port/Src/Port.c(239): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODEN_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(247): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            CLEAR_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOAFSEL_OFFSET), pinIdx);
            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(28): note: expanded from macro 'CLEAR_BIT'
#define CLEAR_BIT(REG,BIT) (REG&=(~(1<<BIT)))
                            ^~~
COTS/MCAL/Port/Src/Port.c(255): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODEN_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(263): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            CLEAR_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOAFSEL_OFFSET), pinIdx);
            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(28): note: expanded from macro 'CLEAR_BIT'
#define CLEAR_BIT(REG,BIT) (REG&=(~(1<<BIT)))
                            ^~~
COTS/MCAL/Port/Src/Port.c(271): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIODEN_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
COTS/MCAL/Port/Src/Port.c(275): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT(*(volatile uint32*)((volatile uint8*) curPortBaseAddress+GPIOIM_OFFSET), pinIdx);
            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(25): note: expanded from macro 'SET_BIT'
#define SET_BIT(REG,BIT) (REG|=(1<<BIT))
                          ^~~
29 warnings generated.
compiling Port.c...
compiling Port_Lcfg.c...
COTS/MCAL/DIO/Src/Dio.c(72): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTA: portBaseAddress = GPIO_PORTA_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(73): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTB: portBaseAddress = GPIO_PORTB_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(74): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTC: portBaseAddress = GPIO_PORTC_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(75): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTD: portBaseAddress = GPIO_PORTD_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(76): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTE: portBaseAddress = GPIO_PORTE_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(77): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTF: portBaseAddress = GPIO_PORTF_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(113): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                        SET_BIT_PER_BB(*(volatile uint32*)((volatile uint8*) portBaseAddress+GPIODATA_OFFSET+BITMASK_ALL_BITS_OFFSET), pinIdx);
                        ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(40): note: expanded from macro 'SET_BIT_PER_BB'
#define SET_BIT_PER_BB(REG,BIT) ((*((volatile uint32*)( 0x42000000 + (((uint32)(&REG) - 0x40000000) * 32) + ((BIT) * 4) ))) = STD_HIGH)
                                                                                 ^~~
COTS/MCAL/DIO/Src/Dio.c(115): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
                        CLEAR_BIT_PER_BB(*(volatile uint32*)((volatile uint8*) portBaseAddress+GPIODATA_OFFSET+BITMASK_ALL_BITS_OFFSET), pinIdx);
                        ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(46): note: expanded from macro 'CLEAR_BIT_PER_BB'
#define CLEAR_BIT_PER_BB(REG,BIT) ((*((volatile uint32*)( 0x42000000 + (((uint32)(&REG) - 0x40000000) * 32) + ((BIT) * 4) ))) = STD_LOW)
                                                                                   ^~~
COTS/MCAL/DIO/Src/Dio.c(125): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTA: portBaseAddress = GPIO_PORTA_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(126): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTB: portBaseAddress = GPIO_PORTB_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(127): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTC: portBaseAddress = GPIO_PORTC_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(128): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTD: portBaseAddress = GPIO_PORTD_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(129): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTE: portBaseAddress = GPIO_PORTE_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(130): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTF: portBaseAddress = GPIO_PORTF_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(146): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTA: portBaseAddress = GPIO_PORTA_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(147): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTB: portBaseAddress = GPIO_PORTB_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(148): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTC: portBaseAddress = GPIO_PORTC_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(149): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTD: portBaseAddress = GPIO_PORTD_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(150): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTE: portBaseAddress = GPIO_PORTE_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(151): warning: incompatible pointer types assigning to 'volatile uint8 *' (aka 'volatile unsigned char *') from 'volatile uint32 *' (aka 'volatile unsigned long *') [-Wincompatible-pointer-types]
        case DIO_PORTF: portBaseAddress = GPIO_PORTF_BASE_ADDRESS; break;
                                        ^ ~~~~~~~~~~~~~~~~~~~~~~~
COTS/MCAL/DIO/Src/Dio.c(196): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            SET_BIT_PER_BB(*(volatile uint32*)((volatile uint8*) portBaseAddress+GPIODATA_OFFSET+BITMASK_ALL_BITS_OFFSET), pinIdx);
            ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(40): note: expanded from macro 'SET_BIT_PER_BB'
#define SET_BIT_PER_BB(REG,BIT) ((*((volatile uint32*)( 0x42000000 + (((uint32)(&REG) - 0x40000000) * 32) + ((BIT) * 4) ))) = STD_HIGH)
                                                                                 ^~~
COTS/MCAL/DIO/Src/Dio.c(198): warning: cast from 'volatile uint8 *' (aka 'volatile unsigned char *') to 'volatile uint32 *' (aka 'volatile unsigned long *') increases required alignment from 1 to 4 [-Wcast-align]
            CLEAR_BIT_PER_BB(*(volatile uint32*)((volatile uint8*) portBaseAddress+GPIODATA_OFFSET+BITMASK_ALL_BITS_OFFSET), pinIdx);
            ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./COTS/Common\Bit_Math.h(46): note: expanded from macro 'CLEAR_BIT_PER_BB'
#define CLEAR_BIT_PER_BB(REG,BIT) ((*((volatile uint32*)( 0x42000000 + (((uint32)(&REG) - 0x40000000) * 32) + ((BIT) * 4) ))) = STD_LOW)
                                                                                   ^~~
COTS/MCAL/DIO/Src/Dio.c(175): warning: unused variable 'PortLevel' [-Wunused-variable]
    volatile Dio_PortLevelType PortLevel;
                               ^
23 warnings generated.
compiling Dio.c...
COTS/MCAL/Systick/Src/Systick.c(25): warning: no previous extern declaration for non-static variable 'Systick_Callback' [-Wmissing-variable-declarations]
VoidFncVoid_t Systick_Callback = NULL_PTR;
              ^
COTS/MCAL/Systick/Src/Systick.c(25): note: declare 'static' if the variable is not intended to be used outside of this translation unit
VoidFncVoid_t Systick_Callback = NULL_PTR;
^
COTS/MCAL/Systick/Src/Systick.c(15): warning: In file included from...
./COTS/MCAL/Systick/Inc\Systick.h(18): warning: In file included from...
./COTS/MCAL/Systick/Inc/Systick_Types.h(34): warning: padding struct 'Systick_ConfigType' with 1 byte to align 'ReloadValue' [-Wpadded]
      Systick_ValueType ReloadValue;
                        ^
COTS/MCAL/Systick/Src/Systick.c(156): warning: no previous prototype for function 'SysTick_Handler' [-Wmissing-prototypes]
void SysTick_Handler(void)
     ^
COTS/MCAL/Systick/Src/Systick.c(156): note: declare 'static' if the function is not intended to be used outside of this translation unit
void SysTick_Handler(void)
^
static 
3 warnings generated.
compiling Systick.c...
COTS/MCAL/Systick/Src/Systick_Lcfg.c(16): warning: In file included from...
./COTS/MCAL/Systick/Inc\Systick.h(18): warning: In file included from...
./COTS/MCAL/Systick/Inc/Systick_Types.h(34): warning: padding struct 'Systick_ConfigType' with 1 byte to align 'ReloadValue' [-Wpadded]
      Systick_ValueType ReloadValue;
                        ^
1 warning generated.
compiling Systick_Lcfg.c...
COTS/APP/main.c(10): warning: 'return' will never be executed [-Wunreachable-code-return]
        return 0;
               ^
1 warning generated.
compiling main.c...
COTS/APP/Blink/Src/Blink.c(97): warning: passing 'const LED_ConfigType[2]' to parameter of type 'LED_ConfigType *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    LED_Init(LED_Config);
             ^~~~~~~~~~
./COTS/HAL/LED/Inc\LED.h(62): note: passing argument to parameter 'LED_Config' here
void LED_Init(LED_ConfigType* LED_Config);
                              ^
COTS/APP/Blink/Src/Blink.c(15): warning: In file included from...
./COTS/APP/Blink/Inc\Blink.h(20): warning: In file included from...
./COTS/APP/Blink/Inc/Blink_Types.h(31): warning: padding struct 'Blink_ConfigType' with 2 bytes to align 'OnTime' [-Wpadded]
      Blink_TimeType OnTime;
                     ^
2 warnings generated.
compiling Blink.c...
COTS/APP/Blink/Src/Blink_Lcfg.c(16): warning: In file included from...
./COTS/APP/Blink/Inc\Blink.h(20): warning: In file included from...
./COTS/APP/Blink/Inc/Blink_Types.h(31): warning: padding struct 'Blink_ConfigType' with 2 bytes to align 'OnTime' [-Wpadded]
      Blink_TimeType OnTime;
                     ^
1 warning generated.
compiling Blink_Lcfg.c...
COTS/HAL/LED/Src/LED.c(58): warning: declaration shadows a variable in the global scope [-Wshadow]
void LED_Init(LED_ConfigType* LED_Config)
                              ^
./COTS/HAL/LED/Inc\LED.h(44): note: previous declaration is here
extern const LED_ConfigType LED_Config[LED_CONFIG_DEVS];
                            ^
COTS/HAL/LED/Src/LED.c(64): warning: passing 'const Port_ConfigType[8]' to parameter of type 'Port_ConfigType *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Port_Init(Port_Config);
              ^~~~~~~~~~~
./COTS/MCAL/Port/Inc\Port.h(60): note: passing argument to parameter 'PortConfigPtr' here
void Port_Init(Port_ConfigType* PortConfigPtr);
                                ^
2 warnings generated.
compiling LED.c...
compiling LED_Lcfg.c...
assembling startup_TM4C123.s...
RTE/Device/TM4C123GH6PM/system_TM4C123.c(13): warning: In file included from...
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123\TM4C123.h(98): warning: In file included from...
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(298): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(338): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(357): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(713): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(729): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(774): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(779): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(872): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(885): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(892): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(897): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(904): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(910): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(917): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(924): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(929): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(936): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(942): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(949): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(956): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(961): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(968): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(974): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(981): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(988): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(993): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1000): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1006): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1013): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1020): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1025): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1032): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1038): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1045): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1052): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1057): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1064): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1070): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1077): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1084): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1089): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1096): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1102): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123/TM4C123GH6PM.h(1251): warning: anonymous unions are a C11 extension [-Wc11-extensions]
  union {
  ^
RTE/Device/TM4C123GH6PM/system_TM4C123.c(19): warning: // comments are not allowed in this language [-Wcomment]
//-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
^
45 warnings generated.
compiling system_TM4C123.c...
linking...
Program Size: Code=3348 RO-data=736 RW-data=4 ZI-data=648  
".\Objects\FirstProject.axf" - 0 Error(s), 116 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.9.0.pack
                ARM.CMSIS.5.9.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 5.6.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.TM4C_DFP.1.1.0.pack
                Keil.TM4C_DFP.1.1.0
                Texas Instruments Tiva C Series Device Support and Examples
   * Component: Startup Version: 1.0.1

<h2>Collection of Component include folders:</h2>
  ./RTE/_Target_1
  C:/Users/zerocool/AppData/Local/Arm/Packs/ARM/CMSIS/5.9.0/CMSIS/Core/Include
  C:/Users/zerocool/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE:5.6.0

   * Component: Keil::Device:Startup:1.0.1
      Source file:   Device/Source/ARM/startup_TM4C123.s
      Source file:   Device/Source/system_TM4C123.c
      Include file:  Device/Include/TM4C123/TM4C123.h
Build Time Elapsed:  00:00:06
</pre>
</body>
</html>
